name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  docker:
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Build and run Docker Compose services
      run: docker compose up -d

    - name: Check Docker containers
      run: docker compose ps  # Debugging step to check if the containers are running

    - name: Wait for health checks
      run: |
        echo "Waiting for services to pass health checks..."
        for i in {1..15}; do  # Increased retries to 15
          CONTAINER_NAME=$(docker compose ps -q api)

          if [ -z "$CONTAINER_NAME" ]; then
            echo "Error: Unable to find the container for the api service"
            exit 1
          fi

          STATUS=$(docker inspect -f '{{.State.Health.Status}}' "$CONTAINER_NAME")
          if [ "$STATUS" == "healthy" ]; then
            echo "api service is healthy!"
            break
          fi
          
          if [ "$i" -eq 15 ]; then
            echo "api service failed to become healthy in time."
            docker compose logs api  # Capture logs before exiting
            exit 1
          fi
          
          echo "api service not healthy yet... retrying in 10 seconds"
          sleep 10  # Increased retry delay to 10 seconds
        done

    - name: Run tests
      run:  curl -f http://localhost:8000/health || exit 1

    - name: Tear down services
      if: always()
      run: docker compose down

    - name: Capture API service logs on failure
      if: failure()
      run: docker compose logs api  # Capture logs if the job fails
